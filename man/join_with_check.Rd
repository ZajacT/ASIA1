% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_with_check.R
\name{join_with_check}
\alias{join_with_check}
\title{Joining two data frames}
\usage{
join_with_check(x, y, xDescription = "x", yDescription = "y",
  xCheckAllMatchesY = TRUE, yCheckAllMatchesX = TRUE,
  rowsOrObservations = "rows")
}
\arguments{
\item{x}{data frame}

\item{y}{data frame}

\item{xDescription}{optionally a description of what is \code{x} (for
purpose of providing informative warninig message)}

\item{yDescription}{optionally a description of what is \code{y}  (for
purpose of providing informative warninig message)}

\item{xCheckAllMatchesY}{logical value (\code{TRUE} or \code{FALSE}) - should
function check whether all rows in \code{x} match some row in \code{y}}

\item{yCheckAllMatchesX}{logical value (\code{TRUE} or \code{FALSE}) - should
function check whether all rows in \code{y} match some row in \code{x}}

\item{rowsOrObservations}{"rows" or "observations" (abbreviations "r" and "o"
are accepted) - indicates how numbers of rows that do not match should be
reported: "rows" is suitable for data coming directly from input files
(adds 1 to reported numbers of rows to account that there is also a header
row) while "observations" for data that has already been processed}
}
\value{
Data frame returned by \code{full_join(x, y)}.
}
\description{
Simple routine designed to find out (and report) whether two
data frames have unique combinations of values of common variables and
whether all rows in \code{x} has pair(s) in \code{y} and \emph{vice versa}
before performing full join.
}
